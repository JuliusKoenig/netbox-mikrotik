# Generated by Django 5.2.5 on 2025-09-15 12:36

import django.db.models.deletion
import netbox.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dcim', '0210_macaddress_ordering'),
        ('extras', '0129_fix_script_paths'),
        ('tenancy', '0020_remove_contactgroupmembership'),
    ]

    operations = [
        migrations.CreateModel(
            name='SyncGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=64)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('tenants', models.ManyToManyField(blank=True, related_name='netbox_mikrotik_sync_groups', to='tenancy.tenant')),
            ],
            options={
                'abstract': False,
            },
            bases=(netbox.models.deletion.DeleteMixin, models.Model),
        ),
        migrations.CreateModel(
            name='MikrotikDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('username', models.CharField(max_length=64)),
                ('password', models.CharField(max_length=254)),
                ('address_list_sync', models.BooleanField(default=False)),
                ('dns_sync', models.BooleanField(default=False)),
                ('dhcp_sync', models.BooleanField(default=False)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('device', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='netbox_mikrotik_mikrotik_device', to='dcim.device')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('sync_groups', models.ManyToManyField(blank=True, related_name='devices', to='netbox_mikrotik.syncgroup')),
            ],
            options={
                'verbose_name': 'Device',
                'verbose_name_plural': 'Devices',
                'db_table': 'netbox_mikrotik_device',
                'ordering': ['device__name'],
            },
            bases=(netbox.models.deletion.DeleteMixin, models.Model),
        ),
    ]
